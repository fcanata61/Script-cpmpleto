GERENCIAMENTO DE ATUALIZAÇÕES E REMOÇÃO DE PACOTES
===================================================

1. NOVOS COMPONENTES
--------------------
O sistema passa a ter dois novos scripts principais:

   - uninstall-pkg
   - update-pkg

Esses complementam o conjunto principal de scripts (fetch, extract, build, install, package, etc).


2. SCRIPT: UNINSTALL-PKG
------------------------
Função: remover um pacote previamente instalado.

Passos:

1. Recebe o nome do pacote (ex: "pkg uninstall firefox").
2. Verifica no banco de pacotes instalados:
       /var/lib/pkgdb/firefox/files.list
   Este arquivo contém todos os caminhos instalados pelo pacote.

3. Lê e remove cada arquivo listado.
4. Remove diretórios vazios relacionados.
5. Atualiza banco de dados:
       remove /var/lib/pkgdb/firefox/
6. Registra log em:
       /var/log/pkg/uninstall/firefox.log
7. Opcionalmente executa hook post-uninstall:
       /hooks/post-uninstall/firefox


Resumo:
- Operação reversa da instalação
- Não toca em dependências automaticamente (mantém segurança)
- Remove apenas o que o pacote adicionou


3. SCRIPT: UPDATE-PKG
---------------------
Função: atualizar pacotes de forma estável e previsível.

Fluxo detalhado:

1. Recebe nome do pacote (ex: "pkg update firefox").
2. Localiza o arquivo .desc correspondente:
       package/www/firefox/firefox.desc
3. Lê os campos:
       NAME, VERSION, URL, SHA256
4. Acessa a URL base do tarball ou repositório oficial.
   Exemplo: https://ftp.mozilla.org/pub/firefox/releases/

5. Busca as versões disponíveis.
6. Compara com a versão atual:
       - Se existir uma versão MAIOR (ex: 118 → 119), propõe atualização.
       - Ignora versões menores, betas, nightlies, etc.
         Isso garante estabilidade (só avança versão principal).

7. Baixa o novo tarball temporariamente.
8. Calcula SHA256 da nova versão.
9. Atualiza automaticamente o .desc:
       - Substitui VERSION, URL e SHA256
       - Mantém BUILD_DEPS, RUN_DEPS e outros campos
10. Salva backup do .desc antigo em:
       package/www/firefox/firefox.desc.bak
11. Executa uma reconstrução automática:
       pkg rebuild firefox
12. Gera logs detalhados:
       /var/log/pkg/update/firefox.log


4. POLÍTICA DE ESTABILIDADE
----------------------------
A regra de atualização é simples:

- Só atualiza quando:
     nova_versão > versão_atual  (mudança de major)
- Não atualiza se:
     nova_versão é beta, rc, nightly, ou patch menor.

Isso garante que o sistema se mantenha estável, previsível e coerente.


5. INTEGRAÇÃO COM OS OUTROS SCRIPTS
------------------------------------
update-pkg depende dos seguintes scripts:

   - fetch (para baixar a nova fonte)
   - extract (para preparar o build)
   - build/install/package (para reconstruir)
   - uninstall (para remover versão antiga antes de instalar nova)

Fluxo automático:
   update → uninstall(old) → build(new) → install(new)


6. LOGS E CONTROLE
-------------------
Cada operação (update/uninstall) cria logs completos:
   /var/log/pkg/update/$PKG.log
   /var/log/pkg/uninstall/$PKG.log

E registra o estado no banco de pacotes:
   /var/lib/pkgdb/$PKG/status
   Campos: version, build_date, installed_files


7. BENEFÍCIOS DO MÉTODO
------------------------
✔ Atualizações seguras e estáveis  
✔ Sem necessidade de rastrear repositórios git  
✔ Compatível com o formato .desc existente  
✔ Totalmente automatizável  
✔ Mantém histórico e rollback simples  
✔ Ideal para sistemas de compilação estáveis (como T2, LFS, BLFS)


8. EXEMPLO DE ATUALIZAÇÃO
--------------------------
Antes:
   VERSION = 118.0
   URL = https://ftp.mozilla.org/pub/firefox/releases/118.0/source/firefox-118.0.tar.xz
   SHA256 = abcd123...

Após "pkg update firefox":
   VERSION = 119.0
   URL = https://ftp.mozilla.org/pub/firefox/releases/119.0/source/firefox-119.0.tar.xz
   SHA256 = efg987...


9. HOOKS OPCIONAIS
-------------------
Para integração total, o sistema pode suportar hooks adicionais:

   /hooks/pre-update/$PKG
   /hooks/post-update/$PKG
   /hooks/post-uninstall/$PKG

Exemplo:
   pre-update/firefox → limpa cache antigo de builds
   post-update/firefox → atualiza MIME, desktop-db, etc.


10. RESUMO FINAL
----------------
Os novos scripts expandem o sistema para gerenciar ciclo completo:

   BUILD → INSTALL → UPDATE → UNINSTALL

Com estabilidade garantida via comparação de versão MAIOR e
automação total do .desc.

Fluxo visual:

pkg update firefox
 ├─> lê firefox.desc
 ├─> busca nova versão (estável)
 ├─> baixa tarball
 ├─> atualiza .desc
 ├─> uninstall versão antiga
 ├─> build nova versão
 ├─> install nova versão
 ├─> executa hooks
 └─> log completo + backup .desc


-------------------------------------------------------
FIM DO DOCUMENTO
-------------------------------------------------------
